name: CI/CD

on:
  push:
    branches:
      - cicd
  pull_request:

permissions:
  packages: write

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read .nvmrc
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '${{ env.NODE_VERSION }}'

      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: pnpm install

      - name: Check formatting
        run: pnpx nx format:check

      - name: Lint Code
        run: pnpx nx affected -t lint --parallel=3

      - name: Run Tests
        run: pnpx nx affected -t test --parallel=3

      - name: Build Project
        run: pnpx nx affected -t build --parallel=3

  deploy:
    needs: build_and_test
    if: (github.event_name == 'push') && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image
        run: pnpm nx affected -t container:production --parallel=3

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SERVER_PORT }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script_stop: true
          script: |
            cd ${{ github.ref == 'refs/heads/main' && 'main' || 'dev' }}
            docker compose pull
            docker compose stop || true
            docker compose rm -f || true
            docker compose up -d
